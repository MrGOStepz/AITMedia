//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace AITMediaLibrary.Webservice {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class WebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetListofUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListOfUsersByLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserByUserIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaByPublishYearOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaByDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaByBudgetOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaByGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaByLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaByTitleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaBorrowUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListGenresOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaAvailbableOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListMediaBorrowedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteMediaByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateMediaByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertNewResevebyIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertBorrowMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateReturnMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOfReservedMediaOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLanguageByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGenreByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDirectorByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLanguageByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGenreByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateDirectorByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertDirectorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListofLanguageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListofGenreOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetListofDirectorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService() {
            this.Url = global::AITMediaLibrary.Properties.Settings.Default.AITMediaLibrary_Webservice_WebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetListofUsersCompletedEventHandler GetListofUsersCompleted;
        
        /// <remarks/>
        public event GetListOfUsersByLoginCompletedEventHandler GetListOfUsersByLoginCompleted;
        
        /// <remarks/>
        public event InsertNewUserCompletedEventHandler InsertNewUserCompleted;
        
        /// <remarks/>
        public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
        
        /// <remarks/>
        public event DeleteUserByUserIDCompletedEventHandler DeleteUserByUserIDCompleted;
        
        /// <remarks/>
        public event ListMediaCompletedEventHandler ListMediaCompleted;
        
        /// <remarks/>
        public event ListMediaByPublishYearCompletedEventHandler ListMediaByPublishYearCompleted;
        
        /// <remarks/>
        public event ListMediaByDirectorCompletedEventHandler ListMediaByDirectorCompleted;
        
        /// <remarks/>
        public event ListMediaByBudgetCompletedEventHandler ListMediaByBudgetCompleted;
        
        /// <remarks/>
        public event ListMediaByGenreCompletedEventHandler ListMediaByGenreCompleted;
        
        /// <remarks/>
        public event ListMediaByLanguageCompletedEventHandler ListMediaByLanguageCompleted;
        
        /// <remarks/>
        public event ListMediaByTitleCompletedEventHandler ListMediaByTitleCompleted;
        
        /// <remarks/>
        public event ListMediaBorrowUserCompletedEventHandler ListMediaBorrowUserCompleted;
        
        /// <remarks/>
        public event ListLanguagesCompletedEventHandler ListLanguagesCompleted;
        
        /// <remarks/>
        public event ListGenresCompletedEventHandler ListGenresCompleted;
        
        /// <remarks/>
        public event ListDirectorCompletedEventHandler ListDirectorCompleted;
        
        /// <remarks/>
        public event ListMediaAvailbableCompletedEventHandler ListMediaAvailbableCompleted;
        
        /// <remarks/>
        public event ListMediaBorrowedCompletedEventHandler ListMediaBorrowedCompleted;
        
        /// <remarks/>
        public event DeleteMediaByIDCompletedEventHandler DeleteMediaByIDCompleted;
        
        /// <remarks/>
        public event UpdateMediaByIDCompletedEventHandler UpdateMediaByIDCompleted;
        
        /// <remarks/>
        public event InsertNewMediaCompletedEventHandler InsertNewMediaCompleted;
        
        /// <remarks/>
        public event InsertNewResevebyIDCompletedEventHandler InsertNewResevebyIDCompleted;
        
        /// <remarks/>
        public event InsertBorrowMediaCompletedEventHandler InsertBorrowMediaCompleted;
        
        /// <remarks/>
        public event UpdateReturnMediaCompletedEventHandler UpdateReturnMediaCompleted;
        
        /// <remarks/>
        public event ListOfReservedMediaCompletedEventHandler ListOfReservedMediaCompleted;
        
        /// <remarks/>
        public event DeleteLanguageByIDCompletedEventHandler DeleteLanguageByIDCompleted;
        
        /// <remarks/>
        public event DeleteGenreByIDCompletedEventHandler DeleteGenreByIDCompleted;
        
        /// <remarks/>
        public event DeleteDirectorByIDCompletedEventHandler DeleteDirectorByIDCompleted;
        
        /// <remarks/>
        public event UpdateLanguageByIDCompletedEventHandler UpdateLanguageByIDCompleted;
        
        /// <remarks/>
        public event UpdateGenreByIDCompletedEventHandler UpdateGenreByIDCompleted;
        
        /// <remarks/>
        public event UpdateDirectorByIDCompletedEventHandler UpdateDirectorByIDCompleted;
        
        /// <remarks/>
        public event InsertLanguageCompletedEventHandler InsertLanguageCompleted;
        
        /// <remarks/>
        public event InsertGenreCompletedEventHandler InsertGenreCompleted;
        
        /// <remarks/>
        public event InsertDirectorCompletedEventHandler InsertDirectorCompleted;
        
        /// <remarks/>
        public event GetListofLanguageCompletedEventHandler GetListofLanguageCompleted;
        
        /// <remarks/>
        public event GetListofGenreCompletedEventHandler GetListofGenreCompleted;
        
        /// <remarks/>
        public event GetListofDirectorCompletedEventHandler GetListofDirectorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListofUsers", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListofUsers() {
            object[] results = this.Invoke("GetListofUsers", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListofUsersAsync() {
            this.GetListofUsersAsync(null);
        }
        
        /// <remarks/>
        public void GetListofUsersAsync(object userState) {
            if ((this.GetListofUsersOperationCompleted == null)) {
                this.GetListofUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListofUsersOperationCompleted);
            }
            this.InvokeAsync("GetListofUsers", new object[0], this.GetListofUsersOperationCompleted, userState);
        }
        
        private void OnGetListofUsersOperationCompleted(object arg) {
            if ((this.GetListofUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListofUsersCompleted(this, new GetListofUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListOfUsersByLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListOfUsersByLogin(string userName, string password) {
            object[] results = this.Invoke("GetListOfUsersByLogin", new object[] {
                        userName,
                        password});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListOfUsersByLoginAsync(string userName, string password) {
            this.GetListOfUsersByLoginAsync(userName, password, null);
        }
        
        /// <remarks/>
        public void GetListOfUsersByLoginAsync(string userName, string password, object userState) {
            if ((this.GetListOfUsersByLoginOperationCompleted == null)) {
                this.GetListOfUsersByLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListOfUsersByLoginOperationCompleted);
            }
            this.InvokeAsync("GetListOfUsersByLogin", new object[] {
                        userName,
                        password}, this.GetListOfUsersByLoginOperationCompleted, userState);
        }
        
        private void OnGetListOfUsersByLoginOperationCompleted(object arg) {
            if ((this.GetListOfUsersByLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListOfUsersByLoginCompleted(this, new GetListOfUsersByLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertNewUser(string UserName, string Password, int UserLevel, string Email) {
            object[] results = this.Invoke("InsertNewUser", new object[] {
                        UserName,
                        Password,
                        UserLevel,
                        Email});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewUserAsync(string UserName, string Password, int UserLevel, string Email) {
            this.InsertNewUserAsync(UserName, Password, UserLevel, Email, null);
        }
        
        /// <remarks/>
        public void InsertNewUserAsync(string UserName, string Password, int UserLevel, string Email, object userState) {
            if ((this.InsertNewUserOperationCompleted == null)) {
                this.InsertNewUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewUserOperationCompleted);
            }
            this.InvokeAsync("InsertNewUser", new object[] {
                        UserName,
                        Password,
                        UserLevel,
                        Email}, this.InsertNewUserOperationCompleted, userState);
        }
        
        private void OnInsertNewUserOperationCompleted(object arg) {
            if ((this.InsertNewUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewUserCompleted(this, new InsertNewUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePassword(string NewPassword, int UserID, int AdminLevel) {
            object[] results = this.Invoke("UpdatePassword", new object[] {
                        NewPassword,
                        UserID,
                        AdminLevel});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(string NewPassword, int UserID, int AdminLevel) {
            this.UpdatePasswordAsync(NewPassword, UserID, AdminLevel, null);
        }
        
        /// <remarks/>
        public void UpdatePasswordAsync(string NewPassword, int UserID, int AdminLevel, object userState) {
            if ((this.UpdatePasswordOperationCompleted == null)) {
                this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
            }
            this.InvokeAsync("UpdatePassword", new object[] {
                        NewPassword,
                        UserID,
                        AdminLevel}, this.UpdatePasswordOperationCompleted, userState);
        }
        
        private void OnUpdatePasswordOperationCompleted(object arg) {
            if ((this.UpdatePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUserByUserID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUserByUserID(int UserID) {
            object[] results = this.Invoke("DeleteUserByUserID", new object[] {
                        UserID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserByUserIDAsync(int UserID) {
            this.DeleteUserByUserIDAsync(UserID, null);
        }
        
        /// <remarks/>
        public void DeleteUserByUserIDAsync(int UserID, object userState) {
            if ((this.DeleteUserByUserIDOperationCompleted == null)) {
                this.DeleteUserByUserIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserByUserIDOperationCompleted);
            }
            this.InvokeAsync("DeleteUserByUserID", new object[] {
                        UserID}, this.DeleteUserByUserIDOperationCompleted, userState);
        }
        
        private void OnDeleteUserByUserIDOperationCompleted(object arg) {
            if ((this.DeleteUserByUserIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserByUserIDCompleted(this, new DeleteUserByUserIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMedia() {
            object[] results = this.Invoke("ListMedia", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaAsync() {
            this.ListMediaAsync(null);
        }
        
        /// <remarks/>
        public void ListMediaAsync(object userState) {
            if ((this.ListMediaOperationCompleted == null)) {
                this.ListMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaOperationCompleted);
            }
            this.InvokeAsync("ListMedia", new object[0], this.ListMediaOperationCompleted, userState);
        }
        
        private void OnListMediaOperationCompleted(object arg) {
            if ((this.ListMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaCompleted(this, new ListMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaByPublishYear", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaByPublishYear(int publishYear) {
            object[] results = this.Invoke("ListMediaByPublishYear", new object[] {
                        publishYear});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaByPublishYearAsync(int publishYear) {
            this.ListMediaByPublishYearAsync(publishYear, null);
        }
        
        /// <remarks/>
        public void ListMediaByPublishYearAsync(int publishYear, object userState) {
            if ((this.ListMediaByPublishYearOperationCompleted == null)) {
                this.ListMediaByPublishYearOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaByPublishYearOperationCompleted);
            }
            this.InvokeAsync("ListMediaByPublishYear", new object[] {
                        publishYear}, this.ListMediaByPublishYearOperationCompleted, userState);
        }
        
        private void OnListMediaByPublishYearOperationCompleted(object arg) {
            if ((this.ListMediaByPublishYearCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaByPublishYearCompleted(this, new ListMediaByPublishYearCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaByDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaByDirector(string director) {
            object[] results = this.Invoke("ListMediaByDirector", new object[] {
                        director});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaByDirectorAsync(string director) {
            this.ListMediaByDirectorAsync(director, null);
        }
        
        /// <remarks/>
        public void ListMediaByDirectorAsync(string director, object userState) {
            if ((this.ListMediaByDirectorOperationCompleted == null)) {
                this.ListMediaByDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaByDirectorOperationCompleted);
            }
            this.InvokeAsync("ListMediaByDirector", new object[] {
                        director}, this.ListMediaByDirectorOperationCompleted, userState);
        }
        
        private void OnListMediaByDirectorOperationCompleted(object arg) {
            if ((this.ListMediaByDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaByDirectorCompleted(this, new ListMediaByDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaByBudget", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaByBudget(decimal budget) {
            object[] results = this.Invoke("ListMediaByBudget", new object[] {
                        budget});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaByBudgetAsync(decimal budget) {
            this.ListMediaByBudgetAsync(budget, null);
        }
        
        /// <remarks/>
        public void ListMediaByBudgetAsync(decimal budget, object userState) {
            if ((this.ListMediaByBudgetOperationCompleted == null)) {
                this.ListMediaByBudgetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaByBudgetOperationCompleted);
            }
            this.InvokeAsync("ListMediaByBudget", new object[] {
                        budget}, this.ListMediaByBudgetOperationCompleted, userState);
        }
        
        private void OnListMediaByBudgetOperationCompleted(object arg) {
            if ((this.ListMediaByBudgetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaByBudgetCompleted(this, new ListMediaByBudgetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaByGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaByGenre(string genre) {
            object[] results = this.Invoke("ListMediaByGenre", new object[] {
                        genre});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaByGenreAsync(string genre) {
            this.ListMediaByGenreAsync(genre, null);
        }
        
        /// <remarks/>
        public void ListMediaByGenreAsync(string genre, object userState) {
            if ((this.ListMediaByGenreOperationCompleted == null)) {
                this.ListMediaByGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaByGenreOperationCompleted);
            }
            this.InvokeAsync("ListMediaByGenre", new object[] {
                        genre}, this.ListMediaByGenreOperationCompleted, userState);
        }
        
        private void OnListMediaByGenreOperationCompleted(object arg) {
            if ((this.ListMediaByGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaByGenreCompleted(this, new ListMediaByGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaByLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaByLanguage(string language) {
            object[] results = this.Invoke("ListMediaByLanguage", new object[] {
                        language});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaByLanguageAsync(string language) {
            this.ListMediaByLanguageAsync(language, null);
        }
        
        /// <remarks/>
        public void ListMediaByLanguageAsync(string language, object userState) {
            if ((this.ListMediaByLanguageOperationCompleted == null)) {
                this.ListMediaByLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaByLanguageOperationCompleted);
            }
            this.InvokeAsync("ListMediaByLanguage", new object[] {
                        language}, this.ListMediaByLanguageOperationCompleted, userState);
        }
        
        private void OnListMediaByLanguageOperationCompleted(object arg) {
            if ((this.ListMediaByLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaByLanguageCompleted(this, new ListMediaByLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaByTitle", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaByTitle(string title) {
            object[] results = this.Invoke("ListMediaByTitle", new object[] {
                        title});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaByTitleAsync(string title) {
            this.ListMediaByTitleAsync(title, null);
        }
        
        /// <remarks/>
        public void ListMediaByTitleAsync(string title, object userState) {
            if ((this.ListMediaByTitleOperationCompleted == null)) {
                this.ListMediaByTitleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaByTitleOperationCompleted);
            }
            this.InvokeAsync("ListMediaByTitle", new object[] {
                        title}, this.ListMediaByTitleOperationCompleted, userState);
        }
        
        private void OnListMediaByTitleOperationCompleted(object arg) {
            if ((this.ListMediaByTitleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaByTitleCompleted(this, new ListMediaByTitleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaBorrowUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaBorrowUser(int UserID) {
            object[] results = this.Invoke("ListMediaBorrowUser", new object[] {
                        UserID});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaBorrowUserAsync(int UserID) {
            this.ListMediaBorrowUserAsync(UserID, null);
        }
        
        /// <remarks/>
        public void ListMediaBorrowUserAsync(int UserID, object userState) {
            if ((this.ListMediaBorrowUserOperationCompleted == null)) {
                this.ListMediaBorrowUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaBorrowUserOperationCompleted);
            }
            this.InvokeAsync("ListMediaBorrowUser", new object[] {
                        UserID}, this.ListMediaBorrowUserOperationCompleted, userState);
        }
        
        private void OnListMediaBorrowUserOperationCompleted(object arg) {
            if ((this.ListMediaBorrowUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaBorrowUserCompleted(this, new ListMediaBorrowUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListLanguages", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListLanguages() {
            object[] results = this.Invoke("ListLanguages", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListLanguagesAsync() {
            this.ListLanguagesAsync(null);
        }
        
        /// <remarks/>
        public void ListLanguagesAsync(object userState) {
            if ((this.ListLanguagesOperationCompleted == null)) {
                this.ListLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListLanguagesOperationCompleted);
            }
            this.InvokeAsync("ListLanguages", new object[0], this.ListLanguagesOperationCompleted, userState);
        }
        
        private void OnListLanguagesOperationCompleted(object arg) {
            if ((this.ListLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListLanguagesCompleted(this, new ListLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListGenres", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListGenres() {
            object[] results = this.Invoke("ListGenres", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListGenresAsync() {
            this.ListGenresAsync(null);
        }
        
        /// <remarks/>
        public void ListGenresAsync(object userState) {
            if ((this.ListGenresOperationCompleted == null)) {
                this.ListGenresOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListGenresOperationCompleted);
            }
            this.InvokeAsync("ListGenres", new object[0], this.ListGenresOperationCompleted, userState);
        }
        
        private void OnListGenresOperationCompleted(object arg) {
            if ((this.ListGenresCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListGenresCompleted(this, new ListGenresCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListDirector() {
            object[] results = this.Invoke("ListDirector", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListDirectorAsync() {
            this.ListDirectorAsync(null);
        }
        
        /// <remarks/>
        public void ListDirectorAsync(object userState) {
            if ((this.ListDirectorOperationCompleted == null)) {
                this.ListDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListDirectorOperationCompleted);
            }
            this.InvokeAsync("ListDirector", new object[0], this.ListDirectorOperationCompleted, userState);
        }
        
        private void OnListDirectorOperationCompleted(object arg) {
            if ((this.ListDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListDirectorCompleted(this, new ListDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaAvailbable", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaAvailbable() {
            object[] results = this.Invoke("ListMediaAvailbable", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaAvailbableAsync() {
            this.ListMediaAvailbableAsync(null);
        }
        
        /// <remarks/>
        public void ListMediaAvailbableAsync(object userState) {
            if ((this.ListMediaAvailbableOperationCompleted == null)) {
                this.ListMediaAvailbableOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaAvailbableOperationCompleted);
            }
            this.InvokeAsync("ListMediaAvailbable", new object[0], this.ListMediaAvailbableOperationCompleted, userState);
        }
        
        private void OnListMediaAvailbableOperationCompleted(object arg) {
            if ((this.ListMediaAvailbableCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaAvailbableCompleted(this, new ListMediaAvailbableCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListMediaBorrowed", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListMediaBorrowed() {
            object[] results = this.Invoke("ListMediaBorrowed", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListMediaBorrowedAsync() {
            this.ListMediaBorrowedAsync(null);
        }
        
        /// <remarks/>
        public void ListMediaBorrowedAsync(object userState) {
            if ((this.ListMediaBorrowedOperationCompleted == null)) {
                this.ListMediaBorrowedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListMediaBorrowedOperationCompleted);
            }
            this.InvokeAsync("ListMediaBorrowed", new object[0], this.ListMediaBorrowedOperationCompleted, userState);
        }
        
        private void OnListMediaBorrowedOperationCompleted(object arg) {
            if ((this.ListMediaBorrowedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListMediaBorrowedCompleted(this, new ListMediaBorrowedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteMediaByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteMediaByID(int ID) {
            object[] results = this.Invoke("DeleteMediaByID", new object[] {
                        ID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteMediaByIDAsync(int ID) {
            this.DeleteMediaByIDAsync(ID, null);
        }
        
        /// <remarks/>
        public void DeleteMediaByIDAsync(int ID, object userState) {
            if ((this.DeleteMediaByIDOperationCompleted == null)) {
                this.DeleteMediaByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteMediaByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteMediaByID", new object[] {
                        ID}, this.DeleteMediaByIDOperationCompleted, userState);
        }
        
        private void OnDeleteMediaByIDOperationCompleted(object arg) {
            if ((this.DeleteMediaByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteMediaByIDCompleted(this, new DeleteMediaByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateMediaByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateMediaByID(int ID, string Title, int Genre, int Language, int Director, int Publish, decimal Budget) {
            object[] results = this.Invoke("UpdateMediaByID", new object[] {
                        ID,
                        Title,
                        Genre,
                        Language,
                        Director,
                        Publish,
                        Budget});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateMediaByIDAsync(int ID, string Title, int Genre, int Language, int Director, int Publish, decimal Budget) {
            this.UpdateMediaByIDAsync(ID, Title, Genre, Language, Director, Publish, Budget, null);
        }
        
        /// <remarks/>
        public void UpdateMediaByIDAsync(int ID, string Title, int Genre, int Language, int Director, int Publish, decimal Budget, object userState) {
            if ((this.UpdateMediaByIDOperationCompleted == null)) {
                this.UpdateMediaByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateMediaByIDOperationCompleted);
            }
            this.InvokeAsync("UpdateMediaByID", new object[] {
                        ID,
                        Title,
                        Genre,
                        Language,
                        Director,
                        Publish,
                        Budget}, this.UpdateMediaByIDOperationCompleted, userState);
        }
        
        private void OnUpdateMediaByIDOperationCompleted(object arg) {
            if ((this.UpdateMediaByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateMediaByIDCompleted(this, new UpdateMediaByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertNewMedia(string Title, int Genre, int Director, int Language, int PublishYear, decimal Budget) {
            object[] results = this.Invoke("InsertNewMedia", new object[] {
                        Title,
                        Genre,
                        Director,
                        Language,
                        PublishYear,
                        Budget});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewMediaAsync(string Title, int Genre, int Director, int Language, int PublishYear, decimal Budget) {
            this.InsertNewMediaAsync(Title, Genre, Director, Language, PublishYear, Budget, null);
        }
        
        /// <remarks/>
        public void InsertNewMediaAsync(string Title, int Genre, int Director, int Language, int PublishYear, decimal Budget, object userState) {
            if ((this.InsertNewMediaOperationCompleted == null)) {
                this.InsertNewMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewMediaOperationCompleted);
            }
            this.InvokeAsync("InsertNewMedia", new object[] {
                        Title,
                        Genre,
                        Director,
                        Language,
                        PublishYear,
                        Budget}, this.InsertNewMediaOperationCompleted, userState);
        }
        
        private void OnInsertNewMediaOperationCompleted(object arg) {
            if ((this.InsertNewMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewMediaCompleted(this, new InsertNewMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertNewResevebyID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertNewResevebyID(int UserID, int MediaID, string Date) {
            object[] results = this.Invoke("InsertNewResevebyID", new object[] {
                        UserID,
                        MediaID,
                        Date});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertNewResevebyIDAsync(int UserID, int MediaID, string Date) {
            this.InsertNewResevebyIDAsync(UserID, MediaID, Date, null);
        }
        
        /// <remarks/>
        public void InsertNewResevebyIDAsync(int UserID, int MediaID, string Date, object userState) {
            if ((this.InsertNewResevebyIDOperationCompleted == null)) {
                this.InsertNewResevebyIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertNewResevebyIDOperationCompleted);
            }
            this.InvokeAsync("InsertNewResevebyID", new object[] {
                        UserID,
                        MediaID,
                        Date}, this.InsertNewResevebyIDOperationCompleted, userState);
        }
        
        private void OnInsertNewResevebyIDOperationCompleted(object arg) {
            if ((this.InsertNewResevebyIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertNewResevebyIDCompleted(this, new InsertNewResevebyIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertBorrowMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertBorrowMedia(int UserID, int MediaID, string DateBorrow, string DateReturn, string MediaTitle) {
            object[] results = this.Invoke("InsertBorrowMedia", new object[] {
                        UserID,
                        MediaID,
                        DateBorrow,
                        DateReturn,
                        MediaTitle});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertBorrowMediaAsync(int UserID, int MediaID, string DateBorrow, string DateReturn, string MediaTitle) {
            this.InsertBorrowMediaAsync(UserID, MediaID, DateBorrow, DateReturn, MediaTitle, null);
        }
        
        /// <remarks/>
        public void InsertBorrowMediaAsync(int UserID, int MediaID, string DateBorrow, string DateReturn, string MediaTitle, object userState) {
            if ((this.InsertBorrowMediaOperationCompleted == null)) {
                this.InsertBorrowMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertBorrowMediaOperationCompleted);
            }
            this.InvokeAsync("InsertBorrowMedia", new object[] {
                        UserID,
                        MediaID,
                        DateBorrow,
                        DateReturn,
                        MediaTitle}, this.InsertBorrowMediaOperationCompleted, userState);
        }
        
        private void OnInsertBorrowMediaOperationCompleted(object arg) {
            if ((this.InsertBorrowMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertBorrowMediaCompleted(this, new InsertBorrowMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateReturnMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateReturnMedia(string ActualDate, decimal LateFee, int UserID, int MediaID) {
            object[] results = this.Invoke("UpdateReturnMedia", new object[] {
                        ActualDate,
                        LateFee,
                        UserID,
                        MediaID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateReturnMediaAsync(string ActualDate, decimal LateFee, int UserID, int MediaID) {
            this.UpdateReturnMediaAsync(ActualDate, LateFee, UserID, MediaID, null);
        }
        
        /// <remarks/>
        public void UpdateReturnMediaAsync(string ActualDate, decimal LateFee, int UserID, int MediaID, object userState) {
            if ((this.UpdateReturnMediaOperationCompleted == null)) {
                this.UpdateReturnMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateReturnMediaOperationCompleted);
            }
            this.InvokeAsync("UpdateReturnMedia", new object[] {
                        ActualDate,
                        LateFee,
                        UserID,
                        MediaID}, this.UpdateReturnMediaOperationCompleted, userState);
        }
        
        private void OnUpdateReturnMediaOperationCompleted(object arg) {
            if ((this.UpdateReturnMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateReturnMediaCompleted(this, new UpdateReturnMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ListOfReservedMedia", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable ListOfReservedMedia() {
            object[] results = this.Invoke("ListOfReservedMedia", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void ListOfReservedMediaAsync() {
            this.ListOfReservedMediaAsync(null);
        }
        
        /// <remarks/>
        public void ListOfReservedMediaAsync(object userState) {
            if ((this.ListOfReservedMediaOperationCompleted == null)) {
                this.ListOfReservedMediaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOfReservedMediaOperationCompleted);
            }
            this.InvokeAsync("ListOfReservedMedia", new object[0], this.ListOfReservedMediaOperationCompleted, userState);
        }
        
        private void OnListOfReservedMediaOperationCompleted(object arg) {
            if ((this.ListOfReservedMediaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListOfReservedMediaCompleted(this, new ListOfReservedMediaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteLanguageByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteLanguageByID(int LanguageID) {
            object[] results = this.Invoke("DeleteLanguageByID", new object[] {
                        LanguageID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteLanguageByIDAsync(int LanguageID) {
            this.DeleteLanguageByIDAsync(LanguageID, null);
        }
        
        /// <remarks/>
        public void DeleteLanguageByIDAsync(int LanguageID, object userState) {
            if ((this.DeleteLanguageByIDOperationCompleted == null)) {
                this.DeleteLanguageByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLanguageByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteLanguageByID", new object[] {
                        LanguageID}, this.DeleteLanguageByIDOperationCompleted, userState);
        }
        
        private void OnDeleteLanguageByIDOperationCompleted(object arg) {
            if ((this.DeleteLanguageByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLanguageByIDCompleted(this, new DeleteLanguageByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteGenreByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteGenreByID(int GenreID) {
            object[] results = this.Invoke("DeleteGenreByID", new object[] {
                        GenreID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGenreByIDAsync(int GenreID) {
            this.DeleteGenreByIDAsync(GenreID, null);
        }
        
        /// <remarks/>
        public void DeleteGenreByIDAsync(int GenreID, object userState) {
            if ((this.DeleteGenreByIDOperationCompleted == null)) {
                this.DeleteGenreByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGenreByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteGenreByID", new object[] {
                        GenreID}, this.DeleteGenreByIDOperationCompleted, userState);
        }
        
        private void OnDeleteGenreByIDOperationCompleted(object arg) {
            if ((this.DeleteGenreByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGenreByIDCompleted(this, new DeleteGenreByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteDirectorByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteDirectorByID(int DirectorID) {
            object[] results = this.Invoke("DeleteDirectorByID", new object[] {
                        DirectorID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDirectorByIDAsync(int DirectorID) {
            this.DeleteDirectorByIDAsync(DirectorID, null);
        }
        
        /// <remarks/>
        public void DeleteDirectorByIDAsync(int DirectorID, object userState) {
            if ((this.DeleteDirectorByIDOperationCompleted == null)) {
                this.DeleteDirectorByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDirectorByIDOperationCompleted);
            }
            this.InvokeAsync("DeleteDirectorByID", new object[] {
                        DirectorID}, this.DeleteDirectorByIDOperationCompleted, userState);
        }
        
        private void OnDeleteDirectorByIDOperationCompleted(object arg) {
            if ((this.DeleteDirectorByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDirectorByIDCompleted(this, new DeleteDirectorByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateLanguageByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateLanguageByID(int LanguageID, string LanguageName) {
            object[] results = this.Invoke("UpdateLanguageByID", new object[] {
                        LanguageID,
                        LanguageName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLanguageByIDAsync(int LanguageID, string LanguageName) {
            this.UpdateLanguageByIDAsync(LanguageID, LanguageName, null);
        }
        
        /// <remarks/>
        public void UpdateLanguageByIDAsync(int LanguageID, string LanguageName, object userState) {
            if ((this.UpdateLanguageByIDOperationCompleted == null)) {
                this.UpdateLanguageByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLanguageByIDOperationCompleted);
            }
            this.InvokeAsync("UpdateLanguageByID", new object[] {
                        LanguageID,
                        LanguageName}, this.UpdateLanguageByIDOperationCompleted, userState);
        }
        
        private void OnUpdateLanguageByIDOperationCompleted(object arg) {
            if ((this.UpdateLanguageByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLanguageByIDCompleted(this, new UpdateLanguageByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateGenreByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateGenreByID(int GenreID, string GenreName) {
            object[] results = this.Invoke("UpdateGenreByID", new object[] {
                        GenreID,
                        GenreName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGenreByIDAsync(int GenreID, string GenreName) {
            this.UpdateGenreByIDAsync(GenreID, GenreName, null);
        }
        
        /// <remarks/>
        public void UpdateGenreByIDAsync(int GenreID, string GenreName, object userState) {
            if ((this.UpdateGenreByIDOperationCompleted == null)) {
                this.UpdateGenreByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGenreByIDOperationCompleted);
            }
            this.InvokeAsync("UpdateGenreByID", new object[] {
                        GenreID,
                        GenreName}, this.UpdateGenreByIDOperationCompleted, userState);
        }
        
        private void OnUpdateGenreByIDOperationCompleted(object arg) {
            if ((this.UpdateGenreByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGenreByIDCompleted(this, new UpdateGenreByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateDirectorByID", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateDirectorByID(int DirectorID, string DirectorName) {
            object[] results = this.Invoke("UpdateDirectorByID", new object[] {
                        DirectorID,
                        DirectorName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateDirectorByIDAsync(int DirectorID, string DirectorName) {
            this.UpdateDirectorByIDAsync(DirectorID, DirectorName, null);
        }
        
        /// <remarks/>
        public void UpdateDirectorByIDAsync(int DirectorID, string DirectorName, object userState) {
            if ((this.UpdateDirectorByIDOperationCompleted == null)) {
                this.UpdateDirectorByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateDirectorByIDOperationCompleted);
            }
            this.InvokeAsync("UpdateDirectorByID", new object[] {
                        DirectorID,
                        DirectorName}, this.UpdateDirectorByIDOperationCompleted, userState);
        }
        
        private void OnUpdateDirectorByIDOperationCompleted(object arg) {
            if ((this.UpdateDirectorByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateDirectorByIDCompleted(this, new UpdateDirectorByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertLanguage(string LanguageName) {
            object[] results = this.Invoke("InsertLanguage", new object[] {
                        LanguageName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertLanguageAsync(string LanguageName) {
            this.InsertLanguageAsync(LanguageName, null);
        }
        
        /// <remarks/>
        public void InsertLanguageAsync(string LanguageName, object userState) {
            if ((this.InsertLanguageOperationCompleted == null)) {
                this.InsertLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertLanguageOperationCompleted);
            }
            this.InvokeAsync("InsertLanguage", new object[] {
                        LanguageName}, this.InsertLanguageOperationCompleted, userState);
        }
        
        private void OnInsertLanguageOperationCompleted(object arg) {
            if ((this.InsertLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertLanguageCompleted(this, new InsertLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertGenre(string GenreName) {
            object[] results = this.Invoke("InsertGenre", new object[] {
                        GenreName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertGenreAsync(string GenreName) {
            this.InsertGenreAsync(GenreName, null);
        }
        
        /// <remarks/>
        public void InsertGenreAsync(string GenreName, object userState) {
            if ((this.InsertGenreOperationCompleted == null)) {
                this.InsertGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertGenreOperationCompleted);
            }
            this.InvokeAsync("InsertGenre", new object[] {
                        GenreName}, this.InsertGenreOperationCompleted, userState);
        }
        
        private void OnInsertGenreOperationCompleted(object arg) {
            if ((this.InsertGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertGenreCompleted(this, new InsertGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsertDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InsertDirector(string DirectorName) {
            object[] results = this.Invoke("InsertDirector", new object[] {
                        DirectorName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void InsertDirectorAsync(string DirectorName) {
            this.InsertDirectorAsync(DirectorName, null);
        }
        
        /// <remarks/>
        public void InsertDirectorAsync(string DirectorName, object userState) {
            if ((this.InsertDirectorOperationCompleted == null)) {
                this.InsertDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertDirectorOperationCompleted);
            }
            this.InvokeAsync("InsertDirector", new object[] {
                        DirectorName}, this.InsertDirectorOperationCompleted, userState);
        }
        
        private void OnInsertDirectorOperationCompleted(object arg) {
            if ((this.InsertDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertDirectorCompleted(this, new InsertDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListofLanguage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListofLanguage() {
            object[] results = this.Invoke("GetListofLanguage", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListofLanguageAsync() {
            this.GetListofLanguageAsync(null);
        }
        
        /// <remarks/>
        public void GetListofLanguageAsync(object userState) {
            if ((this.GetListofLanguageOperationCompleted == null)) {
                this.GetListofLanguageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListofLanguageOperationCompleted);
            }
            this.InvokeAsync("GetListofLanguage", new object[0], this.GetListofLanguageOperationCompleted, userState);
        }
        
        private void OnGetListofLanguageOperationCompleted(object arg) {
            if ((this.GetListofLanguageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListofLanguageCompleted(this, new GetListofLanguageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListofGenre", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListofGenre() {
            object[] results = this.Invoke("GetListofGenre", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListofGenreAsync() {
            this.GetListofGenreAsync(null);
        }
        
        /// <remarks/>
        public void GetListofGenreAsync(object userState) {
            if ((this.GetListofGenreOperationCompleted == null)) {
                this.GetListofGenreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListofGenreOperationCompleted);
            }
            this.InvokeAsync("GetListofGenre", new object[0], this.GetListofGenreOperationCompleted, userState);
        }
        
        private void OnGetListofGenreOperationCompleted(object arg) {
            if ((this.GetListofGenreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListofGenreCompleted(this, new GetListofGenreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetListofDirector", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetListofDirector() {
            object[] results = this.Invoke("GetListofDirector", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetListofDirectorAsync() {
            this.GetListofDirectorAsync(null);
        }
        
        /// <remarks/>
        public void GetListofDirectorAsync(object userState) {
            if ((this.GetListofDirectorOperationCompleted == null)) {
                this.GetListofDirectorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetListofDirectorOperationCompleted);
            }
            this.InvokeAsync("GetListofDirector", new object[0], this.GetListofDirectorOperationCompleted, userState);
        }
        
        private void OnGetListofDirectorOperationCompleted(object arg) {
            if ((this.GetListofDirectorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetListofDirectorCompleted(this, new GetListofDirectorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetListofUsersCompletedEventHandler(object sender, GetListofUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListofUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListofUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetListOfUsersByLoginCompletedEventHandler(object sender, GetListOfUsersByLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListOfUsersByLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListOfUsersByLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertNewUserCompletedEventHandler(object sender, InsertNewUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteUserByUserIDCompletedEventHandler(object sender, DeleteUserByUserIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserByUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserByUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaCompletedEventHandler(object sender, ListMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaByPublishYearCompletedEventHandler(object sender, ListMediaByPublishYearCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaByPublishYearCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaByPublishYearCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaByDirectorCompletedEventHandler(object sender, ListMediaByDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaByDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaByDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaByBudgetCompletedEventHandler(object sender, ListMediaByBudgetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaByBudgetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaByBudgetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaByGenreCompletedEventHandler(object sender, ListMediaByGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaByGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaByGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaByLanguageCompletedEventHandler(object sender, ListMediaByLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaByLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaByLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaByTitleCompletedEventHandler(object sender, ListMediaByTitleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaByTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaByTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaBorrowUserCompletedEventHandler(object sender, ListMediaBorrowUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaBorrowUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaBorrowUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListLanguagesCompletedEventHandler(object sender, ListLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListGenresCompletedEventHandler(object sender, ListGenresCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListGenresCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListGenresCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListDirectorCompletedEventHandler(object sender, ListDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaAvailbableCompletedEventHandler(object sender, ListMediaAvailbableCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaAvailbableCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaAvailbableCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListMediaBorrowedCompletedEventHandler(object sender, ListMediaBorrowedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListMediaBorrowedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListMediaBorrowedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteMediaByIDCompletedEventHandler(object sender, DeleteMediaByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteMediaByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteMediaByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateMediaByIDCompletedEventHandler(object sender, UpdateMediaByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateMediaByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateMediaByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertNewMediaCompletedEventHandler(object sender, InsertNewMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertNewResevebyIDCompletedEventHandler(object sender, InsertNewResevebyIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertNewResevebyIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertNewResevebyIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertBorrowMediaCompletedEventHandler(object sender, InsertBorrowMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertBorrowMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertBorrowMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateReturnMediaCompletedEventHandler(object sender, UpdateReturnMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateReturnMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateReturnMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ListOfReservedMediaCompletedEventHandler(object sender, ListOfReservedMediaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListOfReservedMediaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListOfReservedMediaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteLanguageByIDCompletedEventHandler(object sender, DeleteLanguageByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteLanguageByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteLanguageByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteGenreByIDCompletedEventHandler(object sender, DeleteGenreByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGenreByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGenreByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void DeleteDirectorByIDCompletedEventHandler(object sender, DeleteDirectorByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDirectorByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDirectorByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateLanguageByIDCompletedEventHandler(object sender, UpdateLanguageByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLanguageByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLanguageByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateGenreByIDCompletedEventHandler(object sender, UpdateGenreByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGenreByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGenreByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void UpdateDirectorByIDCompletedEventHandler(object sender, UpdateDirectorByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateDirectorByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateDirectorByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertLanguageCompletedEventHandler(object sender, InsertLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertGenreCompletedEventHandler(object sender, InsertGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void InsertDirectorCompletedEventHandler(object sender, InsertDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetListofLanguageCompletedEventHandler(object sender, GetListofLanguageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListofLanguageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListofLanguageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetListofGenreCompletedEventHandler(object sender, GetListofGenreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListofGenreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListofGenreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void GetListofDirectorCompletedEventHandler(object sender, GetListofDirectorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetListofDirectorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetListofDirectorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591